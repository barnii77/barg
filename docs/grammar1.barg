Int := struct {
    value: $builtin.int("[0-9]+")
};

Var := struct {
    name: "[a-zA-Z_][a-zA-Z0-9_]*"
};

$builtin.int(Int);

Recovery := ".*?;\\s*\\n*\\s*";  # smart recovery pattern (what to skip if no match)

Expr := Int | Var;  # tests union composition syntax sugar

# marks as ok if match was found for non-recovery pattern
Assignment := $builtin.mark(struct {
    var: Var,
    "\\s*=\\s*",
    expr: Expr,
    ";" "\\s*(\\n)*\\s*",  # tests sequence composition syntax sugar
}, ok) | Recovery;

# filters out those matches that were not ok (skipped parts due to recovery)
Toplevel := $builtin.filter(Assignment*, ok);  # filter out the matches of recovery pattern
